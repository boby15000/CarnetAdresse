# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    Email_Webmaster: '%env(EMAIL_DU_WEBMASTER)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # explicitly configure the service
    App\Service\Email\Mailjet:
        arguments:
            $keyAPI: '%env(KEY_API)%'
            $keyPrivate: '%env(KEY_PRIVATE)%'
            $emailFrom: '%env(EMAIL_FROM)%'
            $emailName: '%env(EMAIL_NAME)%'
        autowire: true

    
    App\Events\UserNotifier:
        tags:
            - 
                name: 'doctrine.orm.entity_listener'
                event: 'postPersist'
                entity: 'App\Entity\User'
                lazy: true
                method: 'SendMailActivation'
            - 
                name: 'doctrine.orm.entity_listener'
                event: 'postUpdate'
                entity: 'App\Entity\User'
                lazy: true
                method: 'SendMailMotDePasseOublie'


    App\Events\InvitationNotifier:
        arguments:
            $request_stack: '@request_stack'
        tags:
            - 
                name: 'doctrine.orm.entity_listener'
                event: 'postPersist'
                entity: 'App\Entity\Invitation'
                lazy: true
                method: 'SendMail'
        
            